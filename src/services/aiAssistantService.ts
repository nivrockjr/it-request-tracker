
import { getRequests } from './requestService';
import { ITRequest, RequestType, RequestStatus, RequestPriority } from '../types';

interface KnowledgeBase {
  categories: {
    [key: string]: {
      keywords: string[];
      responses: string[];
    };
  };
}

// Base de conhecimento expandida e corrigida para problemas de TI
const knowledgeBase: KnowledgeBase = {
  categories: {
    hardware_pc: {
      keywords: ['pc', 'computador', 'n√£o liga', 'nao liga', 'ligando', 'cpu', 'gabinete', 'fonte', 'energia', 'bot√£o power', 'power', 'ligar'],
      responses: [
        'üñ•Ô∏è **PROBLEMA: PC n√£o liga**\n\n**Diagn√≥stico passo a passo:**\n\n1Ô∏è‚É£ **Verifica√ß√µes b√°sicas:**\n   ‚Ä¢ Cabo de energia conectado firmemente\n   ‚Ä¢ Tomada funcionando (teste com outro aparelho)\n   ‚Ä¢ Bot√£o da fonte ligado (chave I/O atr√°s do gabinete)\n   ‚Ä¢ Cabo de energia da fonte OK\n\n2Ô∏è‚É£ **Teste sem perif√©ricos:**\n   ‚Ä¢ Desconecte mouse, teclado, impressora\n   ‚Ä¢ Mantenha apenas monitor conectado\n\n3Ô∏è‚É£ **Sinais de vida:**\n   ‚Ä¢ LEDs acendem? Ventoinhas giram?\n   ‚Ä¢ Sons de bip na inicializa√ß√£o?\n\n4Ô∏è‚É£ **Problemas mais comuns:**\n   ‚Ä¢ Fonte queimada (40% dos casos)\n   ‚Ä¢ Mem√≥ria RAM mal encaixada\n   ‚Ä¢ Cabo SATA/IDE solto\n\n‚ö†Ô∏è Se nada funcionar, **N√ÉO abra o gabinete** sem conhecimento t√©cnico. Crie uma solicita√ß√£o para nosso suporte!'
      ]
    },
    hardware_perifericos: {
      keywords: ['teclado', 'mouse', 'monitor', 'tela', 'n√£o funciona', 'nao funciona', 'sem imagem', 'tela preta', 'sem sinal', 'impressora'],
      responses: [
        '‚å®Ô∏èüñ±Ô∏è **PROBLEMAS COM PERIF√âRICOS**\n\n**TECLADO/MOUSE:**\n‚Ä¢ Verifique conex√£o USB\n‚Ä¢ Teste em outra porta USB\n‚Ä¢ Reinicie o computador\n‚Ä¢ Verifique pilhas (se wireless)\n\n**MONITOR:**\n‚Ä¢ Cabo de v√≠deo bem conectado\n‚Ä¢ Monitor ligado e com energia\n‚Ä¢ Teste outro cabo VGA/HDMI/DVI\n‚Ä¢ Verifique entrada correta (HDMI1, VGA, etc)\n‚Ä¢ Ajuste brilho/contraste\n\n**IMPRESSORA:**\n‚Ä¢ Cabo USB conectado\n‚Ä¢ Impressora ligada\n‚Ä¢ Driver instalado\n‚Ä¢ Papel carregado\n\nüí° **Dica:** Sempre teste com outro cabo antes de concluir que o hardware est√° defeituoso!'
      ]
    },
    rede_internet: {
      keywords: ['internet', 'conex√£o', 'conexao', 'wifi', 'wi-fi', 'rede', 'desconectado', 'lento', 'navegador', 'sem internet', 'n√£o conecta', 'nao conecta'],
      responses: [
        'üåê **PROBLEMAS DE INTERNET/REDE**\n\n**DIAGN√ìSTICO R√ÅPIDO:**\n\n1Ô∏è‚É£ **Conex√£o cabeada:**\n   ‚Ä¢ Cabo de rede bem conectado\n   ‚Ä¢ LED da placa de rede piscando\n   ‚Ä¢ Teste outro cabo de rede\n\n2Ô∏è‚É£ **Wi-Fi:**\n   ‚Ä¢ √çcone de Wi-Fi vis√≠vel?\n   ‚Ä¢ Senha correta da rede\n   ‚Ä¢ Proximidade do roteador\n   ‚Ä¢ Reiniciar adaptador Wi-Fi\n\n3Ô∏è‚É£ **Testes de conectividade:**\n   ‚Ä¢ Ping google.com no cmd\n   ‚Ä¢ Teste em outro dispositivo\n   ‚Ä¢ Navegador alternativo\n\n4Ô∏è‚É£ **Solu√ß√µes r√°pidas:**\n   ‚Ä¢ Reiniciar roteador (30 segundos desligado)\n   ‚Ä¢ Windows: "Solucionar problemas de rede"\n   ‚Ä¢ Liberar/renovar IP: ipconfig /release e /renew\n   ‚Ä¢ DNS alternativo: 8.8.8.8 ou 1.1.1.1\n\nüîß **Comando √∫til:** `ipconfig /all` para ver configura√ß√µes de rede'
      ]
    },
    email_comunicacao: {
      keywords: ['email', 'e-mail', 'outlook', 'gmail', 'correio', 'anexo', 'spam', 'n√£o recebe', 'nao recebe', 'n√£o envia', 'nao envia', 'configura√ß√£o', 'configuracao'],
      responses: [
        'üìß **PROBLEMAS DE EMAIL**\n\n**CONFIGURA√á√ÉO DE EMAIL:**\n\n**Outlook/Thunderbird:**\n‚Ä¢ Servidor IMAP/POP3 correto\n‚Ä¢ Porta e criptografia adequadas\n‚Ä¢ Senha de aplicativo (se 2FA ativo)\n\n**Problemas comuns:**\n\n1Ô∏è‚É£ **N√£o recebe emails:**\n   ‚Ä¢ Verificar caixa de spam/lixo\n   ‚Ä¢ Confirmar espa√ßo dispon√≠vel\n   ‚Ä¢ Testar webmail (navegador)\n\n2Ô∏è‚É£ **N√£o envia emails:**\n   ‚Ä¢ Servidor SMTP configurado\n   ‚Ä¢ Autentica√ß√£o habilitada\n   ‚Ä¢ Antiv√≠rus bloqueando\n\n3Ô∏è‚É£ **Anexos:**\n   ‚Ä¢ Limite de tamanho (25MB)\n   ‚Ä¢ Formato n√£o bloqueado\n   ‚Ä¢ Compactar se necess√°rio\n\n**Configura√ß√µes t√≠picas Gmail:**\n‚Ä¢ IMAP: imap.gmail.com (993)\n‚Ä¢ SMTP: smtp.gmail.com (587)\n‚Ä¢ Requer senha de aplicativo'
      ]
    },
    software_aplicativos: {
      keywords: ['programa', 'software', 'aplicativo', 'aplica√ß√£o', 'aplicacao', 'instalar', 'atualizar', 'erro', 'n√£o abre', 'nao abre', 'lento', 'trava', 'travando'],
      responses: [
        'üíª **PROBLEMAS DE SOFTWARE**\n\n**DIAGN√ìSTICO POR SINTOMA:**\n\n1Ô∏è‚É£ **Programa n√£o abre:**\n   ‚Ä¢ Executar como administrador\n   ‚Ä¢ Compatibilidade (Windows 7/8/10)\n   ‚Ä¢ Antiv√≠rus bloqueando\n   ‚Ä¢ Arquivos corrompidos\n\n2Ô∏è‚É£ **Programa lento/trava:**\n   ‚Ä¢ Fechar programas desnecess√°rios\n   ‚Ä¢ Verificar uso de RAM/CPU\n   ‚Ä¢ Limpar arquivos tempor√°rios\n   ‚Ä¢ Desfragmentar HD (se n√£o SSD)\n\n3Ô∏è‚É£ **Erros de instala√ß√£o:**\n   ‚Ä¢ Executar como administrador\n   ‚Ä¢ Desativar antiv√≠rus temporariamente\n   ‚Ä¢ Limpar registry (ccleaner)\n   ‚Ä¢ Requisitos do sistema atendidos\n\n4Ô∏è‚É£ **Atualiza√ß√µes:**\n   ‚Ä¢ Windows Update ativo\n   ‚Ä¢ Atualiza√ß√µes autom√°ticas\n   ‚Ä¢ Verificar site oficial\n\n**Ferramentas √∫teis:**\n‚Ä¢ Task Manager (Ctrl+Shift+Esc)\n‚Ä¢ msconfig - Configura√ß√µes de inicializa√ß√£o\n‚Ä¢ Verificador de arquivos: sfc /scannow'
      ]
    },
    senhas_acesso: {
      keywords: ['senha', 'password', 'login', 'acesso', 'bloqueado', 'esqueci', 'usu√°rio', 'usuario', 'n√£o consigo entrar', 'nao consigo entrar', 'bloqueio'],
      responses: [
        'üîê **PROBLEMAS DE SENHA E ACESSO**\n\n**SOLU√á√ïES POR SITUA√á√ÉO:**\n\n1Ô∏è‚É£ **Esqueci a senha:**\n   ‚Ä¢ Op√ß√£o "Esqueci minha senha"\n   ‚Ä¢ Email de recupera√ß√£o\n   ‚Ä¢ Pergunta de seguran√ßa\n   ‚Ä¢ Contato com administrador\n\n2Ô∏è‚É£ **Conta bloqueada:**\n   ‚Ä¢ Aguardar tempo de bloqueio\n   ‚Ä¢ Contatar administrador\n   ‚Ä¢ Verificar tentativas anteriores\n\n3Ô∏è‚É£ **Problema de digita√ß√£o:**\n   ‚Ä¢ Caps Lock ativado\n   ‚Ä¢ Teclado num√©rico\n   ‚Ä¢ Layout do teclado (BR/US)\n   ‚Ä¢ Caracteres especiais\n\n4Ô∏è‚É£ **Navegador:**\n   ‚Ä¢ Limpar cache/cookies\n   ‚Ä¢ Modo privado/inc√≥gnito\n   ‚Ä¢ Gerenciador de senhas\n   ‚Ä¢ Autopreenchimento desabilitado\n\n**DICAS DE SEGURAN√áA:**\n‚Ä¢ Use senhas fortes (8+ caracteres)\n‚Ä¢ Combine letras, n√∫meros e s√≠mbolos\n‚Ä¢ N√£o use informa√ß√µes pessoais\n‚Ä¢ Ative autentica√ß√£o de dois fatores\n\n‚ö†Ô∏è **NUNCA compartilhe senhas por email ou telefone!**'
      ]
    },
    sistema_windows: {
      keywords: ['windows', 'sistema', 'lento', 'erro', 'blue screen', 'tela azul', 'reinicia', 'atualiza√ß√£o', 'atualizacao', 'boot', 'inicializa√ß√£o', 'inicializacao'],
      responses: [
        'ü™ü **PROBLEMAS DO WINDOWS**\n\n**DIAGN√ìSTICO DO SISTEMA:**\n\n1Ô∏è‚É£ **Sistema lento:**\n   ‚Ä¢ Verificar espa√ßo em disco (min 15%)\n   ‚Ä¢ Programas iniciando com Windows\n   ‚Ä¢ Verificar malware/v√≠rus\n   ‚Ä¢ Limpeza de arquivos tempor√°rios\n\n2Ô∏è‚É£ **Erros e travamentos:**\n   ‚Ä¢ Verificar logs: Event Viewer\n   ‚Ä¢ Comando: sfc /scannow\n   ‚Ä¢ Mem√≥ria RAM: mdsched.exe\n   ‚Ä¢ Disco r√≠gido: chkdsk /f\n\n3Ô∏è‚É£ **Tela azul (BSOD):**\n   ‚Ä¢ Anotar c√≥digo do erro\n   ‚Ä¢ Verificar hardware recente\n   ‚Ä¢ Atualizar drivers\n   ‚Ä¢ Testar mem√≥ria RAM\n\n4Ô∏è‚É£ **Problemas de boot:**\n   ‚Ä¢ Modo de seguran√ßa (F8)\n   ‚Ä¢ Repara√ß√£o autom√°tica\n   ‚Ä¢ Restaura√ß√£o do sistema\n   ‚Ä¢ M√≠dia de recupera√ß√£o\n\n**MANUTEN√á√ÉO PREVENTIVA:**\n‚Ä¢ Windows Update autom√°tico\n‚Ä¢ Antiv√≠rus atualizado\n‚Ä¢ Backup regular\n‚Ä¢ Limpeza mensal\n\nüîß **Ferramentas √∫teis:** msconfig, diskpart, regedit'
      ]
    },
    solicitacoes: {
      keywords: ['solicita√ß√£o', 'solicitacao', 'ticket', 'chamado', 'request', 'minhas solicita√ß√µes', 'meus chamados', 'status', 'andamento'],
      responses: [
        'üìã **CONSULTA DE SOLICITA√á√ïES**\n\n**Para ver suas solicita√ß√µes:**\n\n1Ô∏è‚É£ **Menu lateral:** Clique em "Minhas Solicita√ß√µes"\n\n2Ô∏è‚É£ **Status dispon√≠veis:**\n   ‚Ä¢ Nova - Rec√©m criada\n   ‚Ä¢ Atribu√≠da - Designada para t√©cnico\n   ‚Ä¢ Em Andamento - Sendo resolvida\n   ‚Ä¢ Resolvida - Problema solucionado\n   ‚Ä¢ Fechada - Finalizada\n\n3Ô∏è‚É£ **Informa√ß√µes que voc√™ ver√°:**\n   ‚Ä¢ N√∫mero do chamado\n   ‚Ä¢ Data de cria√ß√£o\n   ‚Ä¢ Prioridade\n   ‚Ä¢ T√©cnico respons√°vel\n   ‚Ä¢ Coment√°rios e atualiza√ß√µes\n\nüí° **Dica:** Voc√™ tamb√©m pode perguntar "minhas solicita√ß√µes" aqui no chat para ver um resumo r√°pido!'
      ]
    }
  }
};

class AIAssistantService {
  async processMessage(message: string, userId?: string): Promise<string> {
    console.log('Processing message:', message);
    const lowerMessage = message.toLowerCase().trim();
    
    // Verificar se √© uma pergunta sobre solicita√ß√µes
    if (this.isRequestQuery(lowerMessage)) {
      return await this.handleRequestQuery(lowerMessage, userId);
    }
    
    // Verificar se √© uma pergunta sobre criar nova solicita√ß√£o
    if (this.isCreateRequestQuery(lowerMessage)) {
      return this.handleCreateRequestQuery();
    }
    
    // Buscar na base de conhecimento expandida
    const knowledgeResponse = this.searchKnowledge(lowerMessage);
    if (knowledgeResponse) {
      console.log('Found knowledge response for:', lowerMessage);
      return knowledgeResponse;
    }
    
    // Resposta padr√£o melhorada
    console.log('Using default response for:', lowerMessage);
    return this.getDefaultResponse();
  }
  
  private isRequestQuery(message: string): boolean {
    const requestKeywords = [
      'minhas solicita√ß√µes', 'minhas solicitacoes', 'meus tickets', 'meus chamados', 
      'chamados', 'requests', 'status', 'andamento', 'pendente', 'resolvido',
      'solicita√ß√£o', 'solicitacao', 'ticket', 'chamado'
    ];
    
    return requestKeywords.some(keyword => message.includes(keyword));
  }
  
  private isCreateRequestQuery(message: string): boolean {
    const createKeywords = [
      'criar solicita√ß√£o', 'criar solicitacao', 'nova solicita√ß√£o', 'nova solicitacao',
      'abrir chamado', 'criar ticket', 'solicitar', 'preciso de ajuda', 'novo chamado'
    ];
    
    return createKeywords.some(keyword => message.includes(keyword));
  }
  
  private async handleRequestQuery(message: string, userId?: string): Promise<string> {
    try {
      const requests = await getRequests(userId);
      
      if (requests.length === 0) {
        return 'üìã **Nenhuma solicita√ß√£o encontrada**\n\nVoc√™ ainda n√£o possui solicita√ß√µes registradas.\n\n‚ûï **Para criar uma nova solicita√ß√£o:**\n‚Ä¢ Clique em "Nova Solicita√ß√£o" no menu\n‚Ä¢ Descreva seu problema detalhadamente\n‚Ä¢ Nossa equipe entrar√° em contato em breve!';
      }
      
      // Filtrar por status se especificado
      if (message.includes('pendente') || message.includes('aberta')) {
        const pendingRequests = requests.filter(r => 
          r.status !== 'resolvida' && r.status !== 'fechada' && 
          r.status !== 'resolved' && r.status !== 'closed'
        );
        
        if (pendingRequests.length === 0) {
          return '‚úÖ **Parab√©ns!**\n\nVoc√™ n√£o possui solicita√ß√µes pendentes no momento.\nTodas suas solicita√ß√µes foram resolvidas!';
        }
        
        return this.formatRequestsList(pendingRequests, 'pendentes');
      }
      
      if (message.includes('resolvid') || message.includes('fechad')) {
        const resolvedRequests = requests.filter(r => 
          r.status === 'resolvida' || r.status === 'fechada' || 
          r.status === 'resolved' || r.status === 'closed'
        );
        
        if (resolvedRequests.length === 0) {
          return 'üìã Voc√™ n√£o possui solicita√ß√µes resolvidas ainda.';
        }
        
        return this.formatRequestsList(resolvedRequests, 'resolvidas');
      }
      
      // Mostrar resumo geral melhorado
      const pending = requests.filter(r => 
        r.status !== 'resolvida' && r.status !== 'fechada' && 
        r.status !== 'resolved' && r.status !== 'closed'
      ).length;
      
      const resolved = requests.length - pending;
      
      return `üìä **RESUMO DAS SUAS SOLICITA√á√ïES**\n\nüìã **Total:** ${requests.length} solicita√ß√µes\n‚è≥ **Pendentes:** ${pending}\n‚úÖ **Resolvidas:** ${resolved}\n\nüí° **Quer ver detalhes?**\n‚Ä¢ Digite "pendentes" para ver abertas\n‚Ä¢ Digite "resolvidas" para ver conclu√≠das\n‚Ä¢ Acesse "Minhas Solicita√ß√µes" no menu para ver todas`;
      
    } catch (error) {
      console.error('Error fetching requests:', error);
      return '‚ùå **Erro ao consultar solicita√ß√µes**\n\nN√£o foi poss√≠vel acessar suas solicita√ß√µes no momento.\n\nüîß **Tente:**\n‚Ä¢ Recarregar a p√°gina\n‚Ä¢ Verificar sua conex√£o\n‚Ä¢ Contactar suporte se persistir';
    }
  }
  
  private handleCreateRequestQuery(): string {
    return '‚ûï **COMO CRIAR UMA NOVA SOLICITA√á√ÉO**\n\n**Passo a passo:**\n\n1Ô∏è‚É£ **Clique em "Nova Solicita√ß√£o"** no menu lateral\n\n2Ô∏è‚É£ **Preencha os detalhes:**\n   ‚Ä¢ T√≠tulo claro e objetivo\n   ‚Ä¢ Descri√ß√£o detalhada do problema\n   ‚Ä¢ Selecione tipo (Hardware, Software, etc)\n   ‚Ä¢ Defina prioridade\n\n3Ô∏è‚É£ **Anexe arquivos** se necess√°rio:\n   ‚Ä¢ Screenshots do erro\n   ‚Ä¢ Logs do sistema\n   ‚Ä¢ Documentos relacionados\n\n4Ô∏è‚É£ **Envie a solicita√ß√£o**\n\n‚úÖ **Voc√™ receber√°:**\n‚Ä¢ N√∫mero do chamado\n‚Ä¢ Confirma√ß√£o por email\n‚Ä¢ Atualiza√ß√µes sobre o progresso\n\nüí° **Dica:** Quanto mais detalhes, mais r√°pida ser√° a solu√ß√£o!';
  }
  
  private formatRequestsList(requests: ITRequest[], type: string): string {
    const recentRequests = requests.slice(0, 5);
    
    let response = `üìã **SUAS SOLICITA√á√ïES ${type.toUpperCase()}**\n\n`;
    
    recentRequests.forEach((request, index) => {
      const status = this.translateStatus(request.status);
      const priority = this.translatePriority(request.priority);
      const date = new Date(request.createdAt).toLocaleDateString('pt-BR');
      
      const priorityIcon = priority === 'Alta' ? 'üî¥' : priority === 'M√©dia' ? 'üü°' : 'üü¢';
      const statusIcon = status === 'Resolvida' ? '‚úÖ' : status === 'Em Andamento' ? '‚ö°' : '‚è≥';
      
      response += `${index + 1}. **${request.title || 'Solicita√ß√£o'}**\n`;
      response += `   üÜî **ID:** ${request.id}\n`;
      response += `   ${statusIcon} **Status:** ${status}\n`;
      response += `   ${priorityIcon} **Prioridade:** ${priority}\n`;
      response += `   üìÖ **Data:** ${date}\n\n`;
    });
    
    if (requests.length > 5) {
      response += `... e mais **${requests.length - 5}** solicita√ß√µes.\n\n`;
    }
    
    response += 'üëÜ **Para ver detalhes completos:** Acesse "Minhas Solicita√ß√µes" no menu lateral.';
    
    return response;
  }
  
  private translateStatus(status: RequestStatus): string {
    const statusMap: { [key in RequestStatus]: string } = {
      'nova': 'Nova',
      'new': 'Nova',
      'atribuida': 'Atribu√≠da',
      'assigned': 'Atribu√≠da',
      'em_andamento': 'Em Andamento',
      'in_progress': 'Em Andamento',
      'resolvida': 'Resolvida',
      'resolved': 'Resolvida',
      'fechada': 'Fechada',
      'closed': 'Fechada'
    };
    
    return statusMap[status] || status;
  }
  
  private translatePriority(priority: RequestPriority): string {
    const priorityMap: { [key in RequestPriority]: string } = {
      'baixa': 'Baixa',
      'low': 'Baixa',
      'media': 'M√©dia',
      'medium': 'M√©dia',
      'alta': 'Alta',
      'high': 'Alta',
      'urgent': 'Urgente'
    };
    
    return priorityMap[priority] || priority;
  }
  
  private searchKnowledge(message: string): string | null {
    console.log('Searching knowledge for:', message);
    
    // Buscar por palavras-chave em todas as categorias
    for (const [category, data] of Object.entries(knowledgeBase.categories)) {
      console.log(`Checking category: ${category}`);
      
      // Verificar se alguma palavra-chave da categoria est√° presente na mensagem
      const foundKeyword = data.keywords.find(keyword => {
        const found = message.includes(keyword.toLowerCase());
        if (found) {
          console.log(`Found matching keyword: "${keyword}" in category: ${category}`);
        }
        return found;
      });
      
      if (foundKeyword) {
        console.log(`Returning response for category: ${category}`);
        return data.responses[0];
      }
    }
    
    console.log('No knowledge match found for:', message);
    return null;
  }
  
  private getDefaultResponse(): string {
    return `ü§ñ **ASSISTENTE DE TI ESPECIALIZADO**\n\n**Posso ajudar voc√™ com:**\n\nüîß **HARDWARE:**\n‚Ä¢ PC que n√£o liga, perif√©ricos, monitores\n‚Ä¢ Problemas de impressora e scanner\n‚Ä¢ Configura√ß√£o de equipamentos\n\nüåê **CONECTIVIDADE:**\n‚Ä¢ Internet e Wi-Fi\n‚Ä¢ Rede local e compartilhamento\n‚Ä¢ VPN e acesso remoto\n\nüíª **SOFTWARE:**\n‚Ä¢ Instala√ß√£o e configura√ß√£o\n‚Ä¢ Erros e travamentos\n‚Ä¢ Atualiza√ß√µes e compatibilidade\n\nüìß **COMUNICA√á√ÉO:**\n‚Ä¢ Configura√ß√£o de email\n‚Ä¢ Problemas de envio/recebimento\n‚Ä¢ Outlook, Gmail, etc.\n\nüîê **SEGURAN√áA:**\n‚Ä¢ Senhas e acessos\n‚Ä¢ Antiv√≠rus e prote√ß√£o\n‚Ä¢ Backup e recupera√ß√£o\n\nüìã **SOLICITA√á√ïES:**\n‚Ä¢ Consultar status dos chamados\n‚Ä¢ Orienta√ß√µes para nova solicita√ß√£o\n\nüí° **EXEMPLOS DE PERGUNTAS:**\n‚Ä¢ "Meu PC n√£o liga"\n‚Ä¢ "Internet est√° lenta"\n‚Ä¢ "Como configurar email"\n‚Ä¢ "Minhas solicita√ß√µes"\n‚Ä¢ "Impressora n√£o funciona"\n\nüó£Ô∏è **COMO USAR:**\nDescreva seu problema espec√≠fico e eu darei orienta√ß√µes detalhadas passo a passo!`;
  }
}

export const aiAssistantService = new AIAssistantService();
